<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">
	<!-- ======================================================= -->
	<!--spring 配置核心点: 数据源、与mybatis整合、事务控制 -->
	<!--spring 的配置文件 这里主要配置和业务逻辑有关的 -->
	<!--1. 扫描业务逻辑组件 -->
	<context:component-scan base-package="com.zsf">
		<!--不扫描 springmvc 的控制器 -->
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- ======================================================= -->
	<!--2. 配置数据源 连接池 数据库 -->
	<context:property-placeholder
		location="classpath:db.properties" />
	<bean id="pooledDataSource"
		class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
		<property name="driverClass" value="${jdbc.driverClass}"></property>
		<property name="user" value="${jdbc.user}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>
	<!-- ======================================================= -->
	<!--=============3. 配置spring 与 mybatis 的 整合============ -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 指定mybatis 全局配置文件、位置 -->
		<property name="configLocation"
			value="classpath:SqlMapConfig.xml"></property>
		<!-- 指定数据源 -->
		<property name="dataSource" ref="pooledDataSource"></property>
		<!-- 指定mybatis 的 mapper 文件位置 -->
		<property name="mapperLocations"
			value="classpath:mapper/*.xml"></property>
	</bean>

	<!-- 4. 配置扫描器 将mybatis 接口的实现加入到 ioc 容器中 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 扫描所有dao 接口的 实现 加入到 ioc 容器中 -->
		<property name="basePackage" value="com.zsf.dao"></property>
	</bean>
	
	<!--配置一个 可以批量执行的 sqlsession  -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" >
	<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
	<constructor-arg name="executorType" value="BATCH"></constructor-arg>
	</bean>
	
	<!--======================================================== -->
	<!--=======================5. 事务控制======================= -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!--控制数据源 -->
		<property name="dataSource" ref="pooledDataSource"></property>
	</bean>
	
	

	<!-- 6. 开启基于注解的事务 ，使用xml 配置形式的事务（必要主要的都是使用配置式 ） -->
	<aop:config>
		<!--切入点表达式 -->
		<aop:pointcut
			expression="execution(* com.zsf.service..*(..))" id="txPoint" />
		<!--配置事务增强 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint" />
	</aop:config>
	<!--配置事务增强 : 事务如何切入 -->
	<tx:advice id="txAdvice"
		transaction-manager="transactionManager">
		<tx:attributes>
			<!--所有方法都是事务方法 -->
			<tx:method name="*" />
			<tx:method name="get*" read-only="true" />
			<!-- <tx:method name="put*"/> <tx:method name="update*"/> <tx:method name="delete*"/> 
				<tx:method name="select*"/> -->
		</tx:attributes>
	</tx:advice>
	<!-- ======================================================= -->


</beans>